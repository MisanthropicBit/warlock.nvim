local editor = {}

---@param colors warlock.Colors
---@return warlock.Highlights
function editor.create(colors)
    return {
        ColorColumn = { bg = colors.brown },
        -- Conceal = { fg = colors.ui.special, bold = true },
        -- CurSearch = { fg = colors.ui.fg, bg = colors.ui.bg_search, bold = true },
        Cursor = { fg = colors.bg1, bg = colors.fg0 },
        -- lCursor = { link = "Cursor" },
        -- CursorIM = { link = "Cursor" },
        -- CursorColumn = { link = "CursorLine" },
        -- CursorLine = { bg = colors.ui.bg_p2 },
        Directory = { fg = colors.cyan },
        DiffAdd = { bg = colors.green },
        DiffChange = { bg = colors.orange },
        DiffDelete = { fg = colors.darkred },
        DiffText = { fg = colors.orange },
        -- EndOfBuffer = { fg = colors.ui.bg },
        ErrorMsg = { fg = colors.darkred },
        -- WinSeparator = { fg = colors.ui.bg_m3, bg = colors.ui.bg_dim },
        -- VertSplit = { link = "WinSeparator" },
        -- Folded = { fg = colors.ui.special, bg = colors.ui.bg_p1 },
        -- FoldColumn = { fg = colors.ui.nontext, bg = colors.ui.bg_gutter },
        -- SignColumn = { fg = colors.ui.special, bg = colors.ui.bg_gutter },
        -- IncSearch = { fg = colors.ui.fg_reverse, bg = colors.diag.warning },
        -- Substitute = { fg = colors.ui.fg, bg = colors.vcs.removed },
        -- LineNr = { fg = colors.ui.nontext, bg = colors.ui.bg_gutter },
        -- CursorLineNr = { fg = colors.diag.warning, bg = colors.ui.bg_gutter, bold = true },
        -- MatchParen = { fg = colors.diag.warning, bold = true },
        -- ModeMsg = { fg = colors.diag.warning, bold = true },
        -- MsgArea = vim.o.cmdheight == 0 and {link = 'StatusLine'} or { fg = colors.ui.fg_dim },
        -- MsgSeparator = { bg = vim.o.cmdheight == 0 and colors.ui.bg or colors.ui.bg_m3 },
        -- MoreMsg = { fg = colors.diag.info },
        -- NonText = { fg = colors.ui.nontext },
        Normal = { fg = colors.fg1, bg = colors.darkpurple }, -- bg = colors.bg1 },
        -- NormalFloat = { fg = colors.ui.float.fg, bg = colors.ui.float.bg },
        -- FloatBorder = { fg = colors.ui.float.fg_border, bg = colors.ui.float.bg_border },
        -- FloatTitle = { fg = colors.ui.special, bg = colors.ui.float.bg_border, bold = true },
        -- FloatFooter = { fg = colors.ui.nontext, bg = colors.ui.float.bg_border },
        -- NormalNC = config.dimInactive and { fg = colors.ui.fg_dim, bg = colors.ui.bg_dim } or { link = "Normal" },
        -- Pmenu = { fg = colors.ui.pmenu.fg, bg = colors.ui.pmenu.bg },
        -- PmenuSel = { fg = colors.ui.pmenu.fg_sel, bg = colors.ui.pmenu.bg_sel },
        -- PmenuSbar = { bg = colors.ui.pmenu.bg_sbar },
        -- PmenuThumb = { bg = colors.ui.pmenu.bg_thumb },
        -- Question = { link = "MoreMsg" },
        -- QuickFixLine = { bg = colors.ui.bg_p1 },
        -- Search = { fg = colors.ui.fg, bg = colors.ui.bg_search },
        -- SpecialKey = { fg = colors.ui.special },
        -- SpellBad = { undercurl = config.undercurl, underline = not config.undercurl, sp = colors.diag.error },
        -- SpellCap = { undercurl = config.undercurl, underline = not config.undercurl, sp = colors.diag.warning },
        -- SpellLocal = { undercurl = config.undercurl, underline = not config.undercurl, sp = colors.diag.warning },
        -- SpellRare = { undercurl = config.undercurl, underline = not config.undercurl, sp = colors.diag.warning },
        -- StatusLine = { fg = colors.ui.fg_dim, bg = colors.ui.bg_m3 },
        -- StatusLineNC = { fg = colors.ui.nontext, bg = colors.ui.bg_m3 },
        -- TabLine = { bg = colors.ui.bg_m3, fg = colors.ui.special },
        -- TabLineFill = { bg = colors.ui.bg },
        -- TabLineSel = { fg = colors.ui.fg_dim, bg = colors.ui.bg_p1 },
        Title = { fg = colors.yellow, bold = true },
        Visual = { bg = colors.darkgreen },
        VisualNOS = { link = "Visual" },
        WarningMsg = { fg = colors.orange },
        -- Whitespace = { fg = colors.ui.whitespace },
        -- WildMenu = { link = "Pmenu" },
        -- Winbar = { fg = colors.ui.fg_dim, bg = "NONE" },
        -- WinbarNC = { fg = colors.ui.fg_dim, bg = config.dimInactive and colors.ui.bg_dim or "NONE" },

        -- debugPC = { bg = colors.diff.delete },
        -- debugBreakpoint = { fg = colors.syn.special1, bg = colors.ui.bg_gutter },

        -- LspReferenceText = { bg = colors.diff.text },
        -- LspReferenceRead = { link = "LspReferenceText" },
        -- LspReferenceWrite = { bg = colors.diff.text, underline = true },

        DiagnosticError = { link = "ErrorMsg" },
        DiagnosticWarn = { link = "WarningMsg" },
        DiagnosticInfo = { fg = colors.purple },
        DiagnosticHint = { fg = colors.gray },
        DiagnosticOk = { fg = colors.green },

        -- DiagnosticSignError = { fg = colors.diag.error, bg = colors.ui.bg_gutter },
        -- DiagnosticSignWarn = { fg = colors.diag.warning, bg = colors.ui.bg_gutter },
        -- DiagnosticSignInfo = { fg = colors.diag.info, bg = colors.ui.bg_gutter },
        -- DiagnosticSignHint = { fg = colors.diag.hint, bg = colors.ui.bg_gutter },

        DiagnosticVirtualTextError = { link = "DiagnosticError" },
        DiagnosticVirtualTextWarn = { link = "DiagnosticWarn" },
        DiagnosticVirtualTextInfo = { link = "DiagnosticInfo" },
        DiagnosticVirtualTextHint = { link = "DiagnosticHint" },

        -- DiagnosticUnderlineError = { undercurl = config.undercurl, underline = not config.undercurl, sp = colors.diag.error },
        -- DiagnosticUnderlineWarn = { undercurl = config.undercurl, underline = not config.undercurl, sp = colors.diag.warning },
        -- DiagnosticUnderlineInfo = { undercurl = config.undercurl, underline = not config.undercurl, sp = colors.diag.info },
        -- DiagnosticUnderlineHint = { undercurl = config.undercurl, underline = not config.undercurl, sp = colors.diag.hint },

        -- LspSignatureActiveParameter = { fg = colors.diag.warning },
        -- LspCodeLens = { fg = colors.syn.comment },

        -- diffAdded = { fg = colors.vcs.added },
        -- diffRemoved = { fg = colors.vcs.removed },
        -- diffDeleted = { fg = colors.vcs.removed },
        -- diffChanged = { fg = colors.vcs.changed },
        -- diffOldFile = { fg = colors.vcs.removed },
        -- diffNewFile = { fg = colors.vcs.added },
        -- healthError = { fg = theme.diag.error },
        -- healthSuccess = { fg = theme.diag.ok },
        -- healthWarning = { fg = theme.diag.warning },

        Comment = { fg = colors.bg2, bg = colors.none },
        Constant = { fg = colors.gray },
        String = { fg = colors.darkgreen },
        Character = { fg = colors.lightgreen },
        Number = { fg = colors.pink },
        Boolean = { fg = colors.yellow, bold = true },
        Float = { link = "Number" },
        Identifier = { fg = colors.cyan },
        Function = { fg = colors.brown },
        Statement = { fg = colors.purple },
        Operator = { fg = colors.blue },
        Keyword = { fg = colors.paleblue },
        Exception = { fg = colors.darkred },
        PreProc = { fg = colors.lightgreen },
        Define = { link = "PreProc" },
        Macro = { link = "PreProc" },
        --  PreCondit	preprocessor #if, #else, #endif, etc.
        Type = { fg = colors.purple },
        StorageClass = { fg = colors.cyan },
        Structure = { fg = colors.purple },
        --  Typedef	A typedef
        -- *Special	any special symbol
        -- Special = { fg = theme.syn.special1 },
        --  SpecialChar	special character in a constant
        --  Tag		you can use CTRL-] on this
        --  Delimiter	character that needs attention
        -- Delimiter = { fg = theme.syn.punct },
        --  SpecialComment	special things inside a comment
        --  Debug		debugging statements
        -- Underlined = { fg = theme.syn.special1, underline = true },
        Bold = { bold = true },
        Italic = { italic = true },
        Ignore = { link = "NonText" },
        Error = { fg = colors.darkred },
        Todo = { fg = colors.darkgreen, bg = colors.lightgreen, bold = true },
        -- qfLineNr = { link = "lineNr" },
        -- qfFileName = { link = "Directory" },
        -- htmlH1 = {},
        -- htmlH2 = {},
        -- mkdHeading = {},
        -- mkdCode = {},
        -- mkdCodeDelimiter = {},
        -- mkdCodeStart = {},
        -- mkdCodeEnd = {},
        -- mkdLink = {},
        -- markdownHeadingDelimiter = {},
        -- markdownCode = { fg = theme.syn.string },
        -- markdownCodeBlock = { fg = theme.syn.string },
        -- markdownEscape = { fg = "NONE" },
        -- markdownH1 = {},
        -- markdownH2 = {},
        -- markdownLinkText = {},
    }
end

return editor
